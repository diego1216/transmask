
const usuarioModel = require('../modelos/usuariosmodel');
const authMiddleWare = require('../middlewares/authMiddleware');

async function registrarUsuario(req, res) {
  const { nombre, usuario, correo, contraseña, confirmcontraseña } = req.body;
  console.log(nombre, usuario, correo, contraseña, confirmcontraseña);

  // Verificar si la contraseña y su confirmación coinciden
   try {
       if (contraseña !== confirmcontraseña) 
       {
         return res.status(400).send('Las contraseñas no coinciden');
       }

 
      // Verificar si el usuario ya está registrado
      const usuarioExistente = await usuarioModel.obtenerPorusuario(usuario);
      if (usuarioExistente) {
          return res.status(400).send('El usuario ya está registrado');
      }

      // Hash de la contraseña
      const hashedPassword = await authMiddleWare.getHash(contraseña);

      // Registrar el usuario en la base de datos
      await usuarioModel.registrar(nombre, usuario, correo, hashedPassword);
      console.log(hashedPassword)

      // Usuario insertado correctamente
      res.redirect('/login');
  } catch (error) {
      console.error(error.message);
      console.log("error en el registro");
      console.log(nombre, usuario, correo, contraseña, confirmcontraseña);
      res.status(500).send('Error interno del servidor');
  }
}

async function obtenerUsuarioPorusuario(req, res) {
  try {
      const { usuario } = req.params;
      const usuarioEncontrado = await usuarioModel.obtenerPorusuario(usuario);
      if (usuarioEncontrado) {
          res.json(usuarioEncontrado);
      } else {
          res.status(404).send('Usuario no encontrado');
      }
  } catch (error) {
      console.error(error);
      res.status(500).send('Error al obtener usuario por nombre');
  }
}

async function obtenerUsuarioPorId(req, res) {
    try {
        const { id } = req.params;
        const usuario = await usuarioModel.obtenerPorId(id);
        if (usuario) {
            res.json(usuario);
        } else {
            res.status(404).send('Usuario no encontrado');
        }
    } catch (error) {
        console.error(error);
        res.status(500).send('Error al obtener usuario por ID');
    }
}

module.exports = {
    registrarUsuario,
    obtenerUsuarioPorusuario,
    obtenerUsuarioPorId,
};